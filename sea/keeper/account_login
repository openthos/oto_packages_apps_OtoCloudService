#!/bin/bash

cd `dirname $0`
source setenv

account_login_func()
{
	server_url=""
	action=""
	token=""
	source $account_conf && rm $account_conf
	if [ "$action"x = "logout"x ];then
		echo "account logout"
		$proot_cmd account_desync
		return
	fi
	if [ ! $server_url ];then
		echo "account login failed"
		return
	fi

	if [ ! $token ];then
		echo "retrieve token failed"
		return
	fi

	list_libs=(`$proot_cmd seaf-cli list-remote -a -c $conf_dir -s $server_url -tk $token 2>&1`)
	if [ $? -ne 0 ];then
		if [[ ${list_libs[@]} =~ "HTTP Error 401" ]];then
			echo "token-invalid" > $data_info_output
			return
		fi
		echo "list remote failed"
	fi

	unset remote_libraries
	declare -A remote_libraries
	mCount=4 #Retrieve first ID
	for i in ${!list_libs[@]}
	do
		if [ "$i" -eq "$mCount" ];then
			mID="${list_libs[i]}"
			remote_libraries["$mID"]="${list_libs[i-1]}"
			let "mCount+=3"
		fi
	done
	echo  ${!remote_libraries[@]},${remote_libraries[@]}

	iDATA=""
	iUserConfig=""
	for l in ${!remote_libraries[@]}
	do
		if [ "${remote_libraries[$l]}"x = "$nDATA"x ];then
			iDATA=$l
		elif [ "${remote_libraries[$l]}"x = "$nUserConfig"x ];then
			iUserConfig=$l
		fi
	done

	echo DATA:$iDATA, UserConfig:$iUserConfig

echo "
server_url=$server_url
user=$user
token=$token
iDATA=$iDATA
iUserConfig=$iUserConfig
" > $conf_dir/account.conf

	### libraries sync
	$proot_cmd account_sync

}

seaDir=/
proot_cmd=""
cd $seaDir

account_login_func

